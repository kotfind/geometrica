// constant defenition
PI:real const = 3.1415926

// variable defenition with literal
num:real = 42

// function defenition
sum x:int y:int -> int = x + y

// if construction
fact x:int -> int = if
    x == 0 then 1
    x > 0  then fact (x - 1)
    else unreachable ""

// variable defenition with function
a = line (pt 1 2) (pt 2 3)

// move & moved
a = moved a 1 2 // same as: a = moved (line (pt 1 2) (pt 3 4)) 1 2

move a 1 2 // same as: a = moved a 1 2 

// let construction
sqdist p1:pt p2:pt -> real = let
        p = p1 - p2
    in
        (x p)^2 + (y p)^2

// TODO: add arrays

// pinning
// last argument represents point's position on specified line
a = point_on_line (line (point 1 2) (point 3 4)) 1.3

// dot notation?
// Note: l.p1.x is same as x (p1 l)
first_point_x = let l = line (point 1 2) (point 3 4) in l.p1.x

// Type check
is_num x:any -> bool = if
    x is real || x is int then true
    else false

// Type cast
real_to_str x:real -> str = str x
