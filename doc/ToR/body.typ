= ВВЕДЕНИЕ

== Наименование программы

Наименование программы --- *"Система построение геометрических чертежей со
встроенным языком программирования и возможностью программного
управления "Geometrica""*

Наименование программы на английском языке --- *"Geometric Drawing System with a
Built-in Programming Language and a Program Control Capability "Geometrica""*

Краткое наименование программы --- *"Geometrica"*

== Краткая характеристика области применения программы

"Geometrica" --- это десктоп-приложение, которое позволяет пользователю
строить и изменять геометрические чертежи, используя графический интерфейс
(GUI), интерфейс командной строки (CLI) или библиотеку для языка
программирования Rust.

= ОСНОВАНИЯ ДЛЯ РАЗРАБОТКИ

== Документ(ы), на основании которых ведется разработка

Разработка ведётся на основании учебного плана подготовки бакалавров по
направлению 09.03.04 "Программная инженерия" и утвержденной академическим
руководителем программы темы курсового проекта.

== Наименование темы разработки

Наименование темы разработки: "Система построение геометрических чертежей со
встроенным языком программирования и возможностью программного
управления "Geometrica"".

Условное обозначение темы разработки – "Geometrica".

= НАЗНАЧЕНИЕ РАЗРАБОТКИ

== Функциональное назначение

Программный продукт позволяет пользователю строить и автоматически перестраивать
геометрические чертежи. Производить расчеты на основе построенного чертежа.

== Эксплуатационное назначение

Продукт состоит из трех исполняемых файлов для ОС Linux и одной библиотеки для
языка программирования Rust:
- Сервера;
- Графического (GUI) клиента;
- Клиента командной строки (CLI);
- Клиента-библиотеки (lib).

Целевой аудиторией являются:
- Школьники, изучающие геометрию (5--11 классы);
- Школьные учителя, преподающие геометрию (5--11 класс);
- Студенты ВУЗов, изучающие вычислительную геометрию;
- Преподаватели ВУЗов, преподающие вычислительную геометрию.

Продукт будет полезен как для проведения занятий, так и для индивидуальной
работы.

CLI- и lib-клиенты в первую очередь нацелены на студентов и преподавателей
ВУЗов. GUI клиент будет интересен всем представителям целевой аудитории.

= ТРЕБОВАНИЯ К ПРОГРАММЕ

== Требования к функциональным характеристикам

=== Требования к серверной части

Сервер должен обрабатывать описанные ниже запросы от клиентской части.

В случае ошибки во время обработки запроса или получения запроса неизвестного
формата, сервер должен отправить клиенту ответ с сообщением об ошибке.

В случае успешной обработки запроса, сервер должен отправить клиенту результат
обработки запроса.

=== Требования к клиентской части

Все три клиента имеют одинаковый набор возможностей. Отличия состоят только в
интерфейсе взаимодействия.

Функции клиента:
- Создать новый объект.
    - Объект бывает одного из следующих типов:
        - `Bool` (`true` или `false`)
        - `Int` (целое число)
        - `Real` (вещественное число)
        - `Str` (текст)
        - `Pt` (точка)
        - `Line` (прямая)
        - `Circ` (окружность)

        Каждый объект либо содержит значение соответствующего типа, либо
        значения *не* содержит (`none`).

    - Для создания объекта нужно указать его имя и *выражение* для его
        вычисления. Выражение может быть задано либо формулой, либо графически
        (при работе в графическом клиенте).

    - Если выражение включает в себя имена других объектов, то объект называется
        *зависимым*. Иначе, объект называется *свободным*.

    - Выражение может содержать следующие конструкции:
        - Литералы
        - Арифметические операции
        - Вызовы встроенных или определенных пользователем функций
        - Условные конструкции (выражение `if`)
        - Создание локальных объектов (выражение `let`)

- Изменить свободный объект.

    Свободному объекту можно задать новое значение, тогда объекты, зависимые от
    данного, автоматически обновят своё значение.

    Новое значение должно иметь тот же тип, что и старое.

- Узнать значение объекта по его имени

- Узнать значение всех объектов

- Вычислить произвольное выражение

    Эта функция полезна для вычисления тех или иных параметров чертежа,
    например, площади треугольника, величины угла.

- Удалить объект

    Удаление некоторого объекта также приведет к удалению всех объектов, от него
    зависящих.

- Объявить новую функцию

    Пользователь должен указать
    - имя функции;
    - имена и типы аргументов функции;
    - возвращаемый тип функции;
    - тело функции.

    Тело функции является *выражением*, описанного выше формата.

- Изменить трансформацию

    Трансформация состоит из двух параметров:
    - `offset` --- сдвиг
        - тип --- `Pt`
        - значение по-умолчанию --- `(0.0, 0.0)`
    - `zoom` -- приближение
        - тип --- `Real`
        - значение по-умолчанию --- `1.0`

    Значение всех объектов отображается с учетом трансформации.

- Сохранить чертеж в файл

- Загрузить чертеж из файла

== Требования к надежности

Клиенты и сервер *не* должны аварийно завершаться ни при каких действиях
пользователя.

== Условия эксплуатации

=== Климатические условия эксплуатации

Требований к климатическим условиям эксплуатации не предъявляется.

=== Требования к видам обслуживания

Обслуживание не требуется.

=== Требования к численности и квалификации персонала

Работа с сервером происходит через один из клиентов, *не* напрямую.

Для работы с графическим (GUI) клиентом достаточно одного человека, обладающего
базовыми навыками работы с компьютером.

Для работы с клиентом командной строки (CLI) достаточно одного человека, обладающего
базовыми навыками работы в командной строке (терминале) ОС Linux и знанием
встроенного языка программирования.

Для работы с клиентом-библиотекой достаточно одного человека, знающего
язык программирования Rust.

== Требования к составу и параметрам технических средств

Рекомендуемые требования к оборудованию:
- Персональный компьютер (ПК) или ноутбук
- Операционная система Linux

== Требования к информационной и программной совместимости

=== Требования к исходным кодам и языкам программирования

Исходные коды программ должны быть написаны на языке программирования Rust.

=== Требования к программным средствам, используемым программой

Для корректной работы каждого из клиентов на компьютере должна быть установлена
операционная система Linux. Для корректной работы графического (GUI) клиента
также должно быть установлено графическое окружение.

== Требования к маркировке и упаковке

Программный продукт состоит из четырех отдельных компонентов:
- Сервера;
- Графического (GUI) клиента;
- Клиента командной строки (CLI);
- Клиента-библиотеки (lib).

Клиент-библиотека поставляется в виде исходного кода для дальнейшего
использования в виде статической библиотеки.

Остальные три компонента поставляются в виде бинарных файлов и требуют
установки. Необходимо установить сервер и один или оба клиента.

Требования к маркировке и упаковке не предъявляются.

== Требования к транспортированию и хранению

Транспортировка и хранение программного продукта возможна на любом электронном
носителе информации, как то:
- USB-накопителе;
- съемном HDD диске;
- съемном SSD диске;
- компакт-диске;
- дискете;
- облачном хранилище.

Исходный код программы содержится в github-репозитории: #link("https://github.com/kotfind/geometrica")

= ТРЕБОВАНИЯ К ПРОГРАММНОЙ ДОКУМЕНТАЦИИ

== Состав программной документации

- "Geometrica". Техническое задание (ГОСТ 19.201-78);
- "Geometrica". Пояснительная записка (ГОСТ 19.404-79);
- "Geometrica". Руководство оператора (ГОСТ 19.505-79);
- "Geometrica". Программа и методика испытаний (ГОСТ 19.301-79);
- "Geometrica". Текст программы. (ГОСТ 19.401-78).

== Специальные требования к программной документации

Документы к программе должны быть выполнены в соответствии с ГОСТ 19.106-78 и ГОСТами к каждому виду
документа.

Пояснительная записка должна быть загружена в систему Антиплагиат через LMS "НИУ ВШЭ".

Техническое задание и пояснительная записка, титульные листы других документов должны быть подписаны
руководителем разработки и исполнителем.

Документация и программа сдается в электронном виде в формате `.pdf` или `.docx` в архиве формата `.zip` или `.rar`.

За три дня до защиты комиссии все материалы курсового проекта:
- программная документация,
- программный проект,
- исполняемый файл,
- отзыв руководителя,
- отчет системы Антиплагиат
должны быть загружены одним или несколькими архивами в проект дисциплины "Курсовой проект" в личном
кабинете в информационной образовательной среде SmartLMS НИУ ВШЭ.

= ТЕХНИКО-ЭКОНОМИЧЕСКИЕ ПОКАЗАТЕЛИ

В рамках данной работы расчёт экономической эффективности не предусмотрен.

Использование разрабатываемого программного продукта облегчит и сделает более
наглядным процесс
- решение геометрических задач школьниками и студентами;
- проведения занятий по геометрии и вычислительной геометрии учителями школ и
  преподавателями ВУЗов;
- отладки программ для решения задач по вычислительной геометрии студентами
  ВУЗов.

Потребность в продукте обусловлена тем фактом, что все имеющиеся аналоги имеют
только часть функционала разрабатываемого продукта.

#figure(
    caption: [Недостатки аналогичных продуктов],
    table(
        columns: (auto, 1fr),
        align: (center, left),

        table.header[*Название аналога*][*Недостатки аналога*],

        [
            Geogebra Geometry

            #link("https://www.geogebra.org/geometry")
        ],
        table.cell(rowspan: 2)[
            - Возможности встроенного языка программирования крайне ограничены.
            - Отсутствует возможность программного управления (то есть через библиотеку
              какого-либо языка программирования).
            - Отсутствует возможность управления через командную строку.
        ],

        [
            Desmos Geometry

            #link("https://www.desmos.com/geometry")
        ],
        /* SPAN */
    )
)

= СТАДИИ И ЭТАПЫ РАЗРАБОТКИ

== Стадии разработки, этапы и содержание работ

#figure(
    caption: [Стадии разработки, этапы и содержание работ],
    table(
        columns: (1fr, 2fr, 3fr),
        align: (center, left, left),

        table.header[*Стадия разработки*][*Этап работ*][*Содержание работ*],

        table.cell(rowspan: 3)[
            Техническое задание
        ],
        [
            Обоснование необходимости разработки программы
        ],
        [
            - Постановка задачи
            - Сбор исходных материалов
        ],

        /* SPAN */
        [
            Научно-исследовательские работы
        ],
        [
            - Предварительный выбор методов решения задач
            - Определение требований к техническим средствам.
        ],

        /* SPAN */
        [
            Разработка и утверждение технического задания
        ],
        [
            - Определение требований к программе.
            - Определение стадий и этапов разработки программы и программной документации.
            - Выбор языков программирования.
            - Согласование и утверждение технического задания.
        ],

        table.cell(rowspan: 3)[
            Рабочий проект
        ],
        [
            Разработка программы
        ],
        [
            - Программирование и отладка программы.
        ],

        /* SPAN */
        [
            Разработка программной документации
        ],
        [
            - Разработка документации по ГОСТу 19.101-77.
        ],

        /* SPAN */
        [
            Испытания программы
        ],
        [
            - Проведение предварительных испытаний
            - Корректировка программы и документации по результатам испытаний
        ],

        [
            Внедрение
        ],
        [
            Подготовка и передача программы
        ],
        [
            - Подготовка программы и программной документации для презентации и защиты
            - Защита программного продукта комиссии
        ]
    )
)

== Сроки разработки и исполнители

Разработка программного продукта должна быть завершена не позже утверждённого срока сдачи работы.

Исполнитель --- Чубий Савва Андреевич, студент ПИ ФКН НИУ ВШЭ.

= ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ

== Виды испытаний

Производится проверка корректного выполнение программой заложенных в неё
функций, а также визуальная проверка интерфейса.

Функциональное тестирование осуществляется в соответствии с документом
" "Geometrica". Программа и методика испытаний (ГОСТ 19.301-79)".

== Общие требования к приемке работы

Программа будет считаться рабочей при выполнении ей функций, указанных в данном
документе, в условиях, указанных в данном документе.
